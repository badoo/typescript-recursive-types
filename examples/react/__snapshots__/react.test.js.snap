// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Extracts type information from file 1`] = `
Array [
  Object {
    "constructors": Array [
      Object {
        "description": "",
        "parameters": Array [
          Object {
            "description": "",
            "name": "props",
            "raw": "Readonly<Props>",
            "required": true,
            "type": "shape",
            "value": Array [
              Object {
                "description": "The type of button",
                "name": "type",
                "raw": "Types",
                "required": false,
                "type": "enum",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "\\"filled\\"",
                    "raw": "\\"filled\\"",
                    "type": "string",
                    "value": "filled",
                  },
                  Object {
                    "description": "",
                    "name": "\\"stroke\\"",
                    "raw": "\\"stroke\\"",
                    "type": "string",
                    "value": "stroke",
                  },
                  Object {
                    "description": "",
                    "name": "\\"transparent\\"",
                    "raw": "\\"transparent\\"",
                    "type": "string",
                    "value": "transparent",
                  },
                  Object {
                    "description": "",
                    "name": "\\"semitransparent\\"",
                    "raw": "\\"semitransparent\\"",
                    "type": "string",
                    "value": "semitransparent",
                  },
                  Object {
                    "description": "",
                    "name": "\\"monochrome\\"",
                    "raw": "\\"monochrome\\"",
                    "type": "string",
                    "value": "monochrome",
                  },
                  Object {
                    "description": "",
                    "name": "\\"link\\"",
                    "raw": "\\"link\\"",
                    "type": "string",
                    "value": "link",
                  },
                ],
              },
              Object {
                "description": "If the button should fit the smallest space available (\\"inline\\")",
                "name": "narrow",
                "raw": "boolean",
                "required": false,
                "type": "boolean",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "false",
                    "raw": "false",
                    "type": "boolean",
                    "value": "false",
                  },
                  Object {
                    "description": "",
                    "name": "true",
                    "raw": "true",
                    "type": "boolean",
                    "value": "true",
                  },
                ],
              },
              Object {
                "description": "Color applied to the button",
                "name": "color",
                "raw": "false | \\"primary\\" | \\"secondary\\" | \\"generic-red\\"",
                "required": false,
                "type": "enum",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "false",
                    "raw": "false",
                    "type": "boolean",
                    "value": "false",
                  },
                  Object {
                    "description": "",
                    "name": "\\"primary\\"",
                    "raw": "\\"primary\\"",
                    "type": "string",
                    "value": "primary",
                  },
                  Object {
                    "description": "",
                    "name": "\\"secondary\\"",
                    "raw": "\\"secondary\\"",
                    "type": "string",
                    "value": "secondary",
                  },
                  Object {
                    "description": "",
                    "name": "\\"generic-red\\"",
                    "raw": "\\"generic-red\\"",
                    "type": "string",
                    "value": "generic-red",
                  },
                ],
              },
              Object {
                "description": "Name of the icon to show inside the button",
                "name": "icon",
                "raw": "ReactNode",
                "required": true,
                "type": "enum",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "string",
                    "raw": "string",
                    "type": "string",
                    "value": "string",
                  },
                  Object {
                    "description": "",
                    "name": "number",
                    "raw": "number",
                    "type": "string",
                    "value": "number",
                  },
                  Object {
                    "description": "",
                    "name": "false",
                    "raw": "false",
                    "type": "boolean",
                    "value": "false",
                  },
                  Object {
                    "description": "",
                    "name": "true",
                    "raw": "true",
                    "type": "boolean",
                    "value": "true",
                  },
                  Object {
                    "description": "",
                    "name": "__type",
                    "raw": "{}",
                    "type": "shape",
                    "value": Array [],
                  },
                  Object {
                    "description": "",
                    "name": "ReactElement",
                    "raw": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>",
                    "type": "enum",
                    "value": Array [
                      Object {
                        "description": "",
                        "name": "any",
                        "raw": "any",
                        "type": "any",
                        "value": "any",
                      },
                      Object {
                        "description": "",
                        "name": "string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)",
                        "raw": "string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)",
                        "type": "enum",
                        "value": Array [
                          Object {
                            "description": "",
                            "name": "string",
                            "raw": "string",
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "callSignature": Array [
                              Object {
                                "description": "",
                                "parameters": Array [
                                  Object {
                                    "description": "",
                                    "name": "props",
                                    "raw": "any",
                                    "required": true,
                                    "type": "any",
                                    "value": "any",
                                  },
                                ],
                                "returnType": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>",
                              },
                            ],
                            "description": "",
                            "name": "__type",
                            "raw": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                            "type": "function",
                            "value": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                          },
                          Object {
                            "description": "",
                            "name": "__type",
                            "raw": "new (props: any) => Component<any, any, any>",
                            "type": "shape",
                            "value": Array [],
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "description": "",
                    "name": "ReactNodeArray",
                    "raw": "ReactNodeArray",
                    "type": "shape",
                    "value": Array [],
                  },
                  Object {
                    "description": "",
                    "name": "ReactPortal",
                    "raw": "ReactPortal",
                    "type": "shape",
                    "value": Array [
                      Object {
                        "description": "",
                        "name": "key",
                        "raw": "ReactText",
                        "required": true,
                        "type": "enum",
                        "value": Array [
                          Object {
                            "description": "",
                            "name": "string",
                            "raw": "string",
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "description": "",
                            "name": "number",
                            "raw": "number",
                            "type": "string",
                            "value": "number",
                          },
                        ],
                      },
                      Object {
                        "description": "",
                        "name": "children",
                        "raw": "ReactNode",
                        "required": true,
                        "type": "enum",
                        "value": Array [],
                      },
                      Object {
                        "description": "",
                        "name": "type",
                        "raw": "string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)",
                        "required": true,
                        "type": "enum",
                        "value": Array [
                          Object {
                            "description": "",
                            "name": "string",
                            "raw": "string",
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "callSignature": Array [
                              Object {
                                "description": "",
                                "parameters": Array [
                                  Object {
                                    "description": "",
                                    "name": "props",
                                    "raw": "any",
                                    "required": true,
                                    "type": "any",
                                    "value": "any",
                                  },
                                ],
                                "returnType": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>",
                              },
                            ],
                            "description": "",
                            "name": "__type",
                            "raw": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                            "type": "function",
                            "value": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                          },
                          Object {
                            "description": "",
                            "name": "__type",
                            "raw": "new (props: any) => Component<any, any, any>",
                            "type": "shape",
                            "value": Array [],
                          },
                        ],
                      },
                      Object {
                        "description": "",
                        "name": "props",
                        "raw": "any",
                        "required": true,
                        "type": "any",
                        "value": "any",
                      },
                    ],
                  },
                ],
              },
              Object {
                "description": "Text to show inside the button",
                "name": "text",
                "raw": "string",
                "required": true,
                "type": "string",
                "value": "string",
              },
              Object {
                "description": "AB TEST",
                "name": "test",
                "raw": "ABTest",
                "required": false,
                "type": "shape",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "list",
                    "raw": "any[]",
                    "required": true,
                    "type": "array",
                    "value": Array [
                      Object {
                        "description": "",
                        "name": "any",
                        "raw": "any",
                        "type": "any",
                        "value": "any",
                      },
                    ],
                  },
                  Object {
                    "callSignature": Array [
                      Object {
                        "description": "",
                        "parameters": Array [
                          Object {
                            "description": "",
                            "name": "arg0",
                            "raw": "string",
                            "required": true,
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "description": "",
                            "name": "args",
                            "raw": "any[]",
                            "required": true,
                            "type": "array",
                            "value": Array [
                              Object {
                                "description": "",
                                "name": "any",
                                "raw": "any",
                                "type": "any",
                                "value": "any",
                              },
                            ],
                          },
                        ],
                        "returnType": "void",
                      },
                    ],
                    "description": "",
                    "name": "reportHit",
                    "raw": "(arg0: string, ...args: any[]) => void",
                    "required": true,
                    "type": "function",
                    "value": "(arg0: string, ...args: any[]) => void",
                  },
                ],
              },
              Object {
                "callSignature": Array [
                  Object {
                    "description": "",
                    "parameters": Array [
                      Object {
                        "description": "",
                        "name": "event",
                        "raw": "MouseEvent",
                        "required": true,
                        "type": "shape",
                        "value": Array [],
                      },
                    ],
                    "returnType": "boolean",
                  },
                ],
                "description": "\\"onClick\\" handler attached to the element",
                "name": "onClick",
                "raw": "(event: MouseEvent) => boolean",
                "required": true,
                "type": "function",
                "value": "(event: MouseEvent) => boolean",
              },
              Object {
                "callSignature": Array [
                  Object {
                    "description": "",
                    "parameters": Array [],
                    "returnType": "void",
                  },
                ],
                "description": "\\"onTouchStart\\" handler attached to the element",
                "name": "onTouchStart",
                "raw": "() => void",
                "required": true,
                "type": "function",
                "value": "() => void",
              },
            ],
          },
        ],
        "returnType": "Button",
      },
      Object {
        "description": "",
        "parameters": Array [
          Object {
            "description": "",
            "name": "props",
            "raw": "Props",
            "required": true,
            "type": "shape",
            "value": Array [
              Object {
                "description": "The type of button",
                "name": "type",
                "raw": "Types",
                "required": false,
                "type": "enum",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "\\"filled\\"",
                    "raw": "\\"filled\\"",
                    "type": "string",
                    "value": "filled",
                  },
                  Object {
                    "description": "",
                    "name": "\\"stroke\\"",
                    "raw": "\\"stroke\\"",
                    "type": "string",
                    "value": "stroke",
                  },
                  Object {
                    "description": "",
                    "name": "\\"transparent\\"",
                    "raw": "\\"transparent\\"",
                    "type": "string",
                    "value": "transparent",
                  },
                  Object {
                    "description": "",
                    "name": "\\"semitransparent\\"",
                    "raw": "\\"semitransparent\\"",
                    "type": "string",
                    "value": "semitransparent",
                  },
                  Object {
                    "description": "",
                    "name": "\\"monochrome\\"",
                    "raw": "\\"monochrome\\"",
                    "type": "string",
                    "value": "monochrome",
                  },
                  Object {
                    "description": "",
                    "name": "\\"link\\"",
                    "raw": "\\"link\\"",
                    "type": "string",
                    "value": "link",
                  },
                ],
              },
              Object {
                "description": "If the button should fit the smallest space available (\\"inline\\")",
                "name": "narrow",
                "raw": "boolean",
                "required": false,
                "type": "boolean",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "false",
                    "raw": "false",
                    "type": "boolean",
                    "value": "false",
                  },
                  Object {
                    "description": "",
                    "name": "true",
                    "raw": "true",
                    "type": "boolean",
                    "value": "true",
                  },
                ],
              },
              Object {
                "description": "Color applied to the button",
                "name": "color",
                "raw": "false | \\"primary\\" | \\"secondary\\" | \\"generic-red\\"",
                "required": false,
                "type": "enum",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "false",
                    "raw": "false",
                    "type": "boolean",
                    "value": "false",
                  },
                  Object {
                    "description": "",
                    "name": "\\"primary\\"",
                    "raw": "\\"primary\\"",
                    "type": "string",
                    "value": "primary",
                  },
                  Object {
                    "description": "",
                    "name": "\\"secondary\\"",
                    "raw": "\\"secondary\\"",
                    "type": "string",
                    "value": "secondary",
                  },
                  Object {
                    "description": "",
                    "name": "\\"generic-red\\"",
                    "raw": "\\"generic-red\\"",
                    "type": "string",
                    "value": "generic-red",
                  },
                ],
              },
              Object {
                "description": "Name of the icon to show inside the button",
                "name": "icon",
                "raw": "ReactNode",
                "required": true,
                "type": "enum",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "string",
                    "raw": "string",
                    "type": "string",
                    "value": "string",
                  },
                  Object {
                    "description": "",
                    "name": "number",
                    "raw": "number",
                    "type": "string",
                    "value": "number",
                  },
                  Object {
                    "description": "",
                    "name": "false",
                    "raw": "false",
                    "type": "boolean",
                    "value": "false",
                  },
                  Object {
                    "description": "",
                    "name": "true",
                    "raw": "true",
                    "type": "boolean",
                    "value": "true",
                  },
                  Object {
                    "description": "",
                    "name": "__type",
                    "raw": "{}",
                    "type": "shape",
                    "value": Array [],
                  },
                  Object {
                    "description": "",
                    "name": "ReactElement",
                    "raw": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>",
                    "type": "enum",
                    "value": Array [
                      Object {
                        "description": "",
                        "name": "any",
                        "raw": "any",
                        "type": "any",
                        "value": "any",
                      },
                      Object {
                        "description": "",
                        "name": "string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)",
                        "raw": "string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)",
                        "type": "enum",
                        "value": Array [
                          Object {
                            "description": "",
                            "name": "string",
                            "raw": "string",
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "callSignature": Array [
                              Object {
                                "description": "",
                                "parameters": Array [
                                  Object {
                                    "description": "",
                                    "name": "props",
                                    "raw": "any",
                                    "required": true,
                                    "type": "any",
                                    "value": "any",
                                  },
                                ],
                                "returnType": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>",
                              },
                            ],
                            "description": "",
                            "name": "__type",
                            "raw": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                            "type": "function",
                            "value": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                          },
                          Object {
                            "description": "",
                            "name": "__type",
                            "raw": "new (props: any) => Component<any, any, any>",
                            "type": "shape",
                            "value": Array [],
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "description": "",
                    "name": "ReactNodeArray",
                    "raw": "ReactNodeArray",
                    "type": "shape",
                    "value": Array [],
                  },
                  Object {
                    "description": "",
                    "name": "ReactPortal",
                    "raw": "ReactPortal",
                    "type": "shape",
                    "value": Array [
                      Object {
                        "description": "",
                        "name": "key",
                        "raw": "ReactText",
                        "required": true,
                        "type": "enum",
                        "value": Array [
                          Object {
                            "description": "",
                            "name": "string",
                            "raw": "string",
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "description": "",
                            "name": "number",
                            "raw": "number",
                            "type": "string",
                            "value": "number",
                          },
                        ],
                      },
                      Object {
                        "description": "",
                        "name": "children",
                        "raw": "ReactNode",
                        "required": true,
                        "type": "enum",
                        "value": Array [],
                      },
                      Object {
                        "description": "",
                        "name": "type",
                        "raw": "string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)",
                        "required": true,
                        "type": "enum",
                        "value": Array [
                          Object {
                            "description": "",
                            "name": "string",
                            "raw": "string",
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "callSignature": Array [
                              Object {
                                "description": "",
                                "parameters": Array [
                                  Object {
                                    "description": "",
                                    "name": "props",
                                    "raw": "any",
                                    "required": true,
                                    "type": "any",
                                    "value": "any",
                                  },
                                ],
                                "returnType": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>",
                              },
                            ],
                            "description": "",
                            "name": "__type",
                            "raw": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                            "type": "function",
                            "value": "(props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>",
                          },
                          Object {
                            "description": "",
                            "name": "__type",
                            "raw": "new (props: any) => Component<any, any, any>",
                            "type": "shape",
                            "value": Array [],
                          },
                        ],
                      },
                      Object {
                        "description": "",
                        "name": "props",
                        "raw": "any",
                        "required": true,
                        "type": "any",
                        "value": "any",
                      },
                    ],
                  },
                ],
              },
              Object {
                "description": "Text to show inside the button",
                "name": "text",
                "raw": "string",
                "required": true,
                "type": "string",
                "value": "string",
              },
              Object {
                "description": "AB TEST",
                "name": "test",
                "raw": "ABTest",
                "required": false,
                "type": "shape",
                "value": Array [
                  Object {
                    "description": "",
                    "name": "list",
                    "raw": "any[]",
                    "required": true,
                    "type": "array",
                    "value": Array [
                      Object {
                        "description": "",
                        "name": "any",
                        "raw": "any",
                        "type": "any",
                        "value": "any",
                      },
                    ],
                  },
                  Object {
                    "callSignature": Array [
                      Object {
                        "description": "",
                        "parameters": Array [
                          Object {
                            "description": "",
                            "name": "arg0",
                            "raw": "string",
                            "required": true,
                            "type": "string",
                            "value": "string",
                          },
                          Object {
                            "description": "",
                            "name": "args",
                            "raw": "any[]",
                            "required": true,
                            "type": "array",
                            "value": Array [
                              Object {
                                "description": "",
                                "name": "any",
                                "raw": "any",
                                "type": "any",
                                "value": "any",
                              },
                            ],
                          },
                        ],
                        "returnType": "void",
                      },
                    ],
                    "description": "",
                    "name": "reportHit",
                    "raw": "(arg0: string, ...args: any[]) => void",
                    "required": true,
                    "type": "function",
                    "value": "(arg0: string, ...args: any[]) => void",
                  },
                ],
              },
              Object {
                "callSignature": Array [
                  Object {
                    "description": "",
                    "parameters": Array [
                      Object {
                        "description": "",
                        "name": "event",
                        "raw": "MouseEvent",
                        "required": true,
                        "type": "shape",
                        "value": Array [],
                      },
                    ],
                    "returnType": "boolean",
                  },
                ],
                "description": "\\"onClick\\" handler attached to the element",
                "name": "onClick",
                "raw": "(event: MouseEvent) => boolean",
                "required": true,
                "type": "function",
                "value": "(event: MouseEvent) => boolean",
              },
              Object {
                "callSignature": Array [
                  Object {
                    "description": "",
                    "parameters": Array [],
                    "returnType": "void",
                  },
                ],
                "description": "\\"onTouchStart\\" handler attached to the element",
                "name": "onTouchStart",
                "raw": "() => void",
                "required": true,
                "type": "function",
                "value": "() => void",
              },
            ],
          },
          Object {
            "description": "",
            "name": "context",
            "raw": "any",
            "required": true,
            "type": "any",
            "value": "any",
          },
        ],
        "returnType": "Button",
      },
    ],
    "description": "",
    "name": "Button",
    "type": Object {
      "description": "",
      "name": "Button",
      "raw": "typeof Button",
      "required": true,
      "type": "shape",
      "value": Array [
        Object {
          "description": "",
          "name": "prototype",
          "raw": "any",
          "required": true,
          "type": "string",
          "value": "error",
        },
        Object {
          "description": "If set, \`this.context\` will be set at runtime to the current value of the given Context.

Usage:

\`\`\`ts
type MyContext = number
const Ctx = React.createContext<MyContext>(0)

class Foo extends React.Component {
   static contextType = Ctx
   context!: React.ContextType<typeof Ctx>
   render () {
     return <>My context's value: {this.context}</>;
   }
}
\`\`\`",
          "name": "contextType",
          "raw": "Context<any>",
          "required": false,
          "type": "enum",
          "value": Array [
            Object {
              "description": "",
              "name": "any",
              "raw": "any",
              "type": "any",
              "value": "any",
            },
          ],
        },
      ],
    },
  },
]
`;
